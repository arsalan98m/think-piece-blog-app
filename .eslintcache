[{"/home/arsalan/Desktop/bootcamp/projects/blog-app/src/index.js":"1","/home/arsalan/Desktop/bootcamp/projects/blog-app/src/components/App.js":"2","/home/arsalan/Desktop/bootcamp/projects/blog-app/src/components/SignUp.js":"3","/home/arsalan/Desktop/bootcamp/projects/blog-app/src/components/SignIn.js":"4","/home/arsalan/Desktop/bootcamp/projects/blog-app/src/components/Post.js":"5","/home/arsalan/Desktop/bootcamp/projects/blog-app/src/components/AddPost.js":"6","/home/arsalan/Desktop/bootcamp/projects/blog-app/src/components/Posts.js":"7","/home/arsalan/Desktop/bootcamp/projects/blog-app/src/firebase.js":"8","/home/arsalan/Desktop/bootcamp/projects/blog-app/src/utils.js":"9","/home/arsalan/Desktop/bootcamp/projects/blog-app/src/components/CurrentUser.js":"10","/home/arsalan/Desktop/bootcamp/projects/blog-app/src/components/Authentication.js":"11","/home/arsalan/Desktop/bootcamp/projects/blog-app/src/components/Dashboard.js":"12","/home/arsalan/Desktop/bootcamp/projects/blog-app/src/context/PostProvider.js":"13","/home/arsalan/Desktop/bootcamp/projects/blog-app/src/context/UserProvider.js":"14","/home/arsalan/Desktop/bootcamp/projects/blog-app/src/components/PrivateRoute.js":"15","/home/arsalan/Desktop/bootcamp/projects/blog-app/src/components/UserProfile.js":"16","/home/arsalan/Desktop/bootcamp/projects/blog-app/src/components/PrivateRouteUserProfile.js":"17","/home/arsalan/Desktop/bootcamp/projects/blog-app/src/components/Comments.js":"18","/home/arsalan/Desktop/bootcamp/projects/blog-app/src/components/Comment.js":"19","/home/arsalan/Desktop/bootcamp/projects/blog-app/src/components/PostPage.js":"20","/home/arsalan/Desktop/bootcamp/projects/blog-app/src/components/AddComment.js":"21","/home/arsalan/Desktop/bootcamp/projects/blog-app/src/components/ForgotPassword.js":"22"},{"size":477,"mtime":1612079027320,"results":"23","hashOfConfig":"24"},{"size":869,"mtime":1612093440877,"results":"25","hashOfConfig":"24"},{"size":2936,"mtime":1612075303596,"results":"26","hashOfConfig":"24"},{"size":2861,"mtime":1612118534325,"results":"27","hashOfConfig":"24"},{"size":2643,"mtime":1612122243035,"results":"28","hashOfConfig":"24"},{"size":1924,"mtime":1612079184479,"results":"29","hashOfConfig":"24"},{"size":505,"mtime":1612078181867,"results":"30","hashOfConfig":"24"},{"size":1914,"mtime":1612094586618,"results":"31","hashOfConfig":"24"},{"size":98,"mtime":1611988111585,"results":"32","hashOfConfig":"24"},{"size":1781,"mtime":1612117911955,"results":"33","hashOfConfig":"24"},{"size":282,"mtime":1612080029811,"results":"34","hashOfConfig":"24"},{"size":598,"mtime":1612081112333,"results":"35","hashOfConfig":"24"},{"size":805,"mtime":1612118116791,"results":"36","hashOfConfig":"24"},{"size":981,"mtime":1612118042971,"results":"37","hashOfConfig":"24"},{"size":409,"mtime":1612079674738,"results":"38","hashOfConfig":"24"},{"size":3491,"mtime":1612091514349,"results":"39","hashOfConfig":"24"},{"size":458,"mtime":1612092878059,"results":"40","hashOfConfig":"24"},{"size":369,"mtime":1612097545539,"results":"41","hashOfConfig":"24"},{"size":803,"mtime":1612117915955,"results":"42","hashOfConfig":"24"},{"size":2124,"mtime":1612122956096,"results":"43","hashOfConfig":"24"},{"size":613,"mtime":1612098603059,"results":"44","hashOfConfig":"24"},{"size":2229,"mtime":1612117995163,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"czh1u1",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"67"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/home/arsalan/Desktop/bootcamp/projects/blog-app/src/index.js",[],["98","99"],"/home/arsalan/Desktop/bootcamp/projects/blog-app/src/components/App.js",[],"/home/arsalan/Desktop/bootcamp/projects/blog-app/src/components/SignUp.js",["100"],"import {\n  Container,\n  Alert,\n  Content,\n  FlexboxGrid,\n  Panel,\n  Form,\n  FormGroup,\n  ControlLabel,\n  FormControl,\n  ButtonToolbar,\n  Button,\n  Icon,\n  Col,\n} from \"rsuite\";\nimport { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { auth, createUserProfileDocument } from \"../firebase\";\n\nconst SignUp = () => {\n  const [displayName, setDisplayName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory(\"\");\n\n  const handleSubmit = async () => {\n    if (displayName && email && password) {\n      try {\n        const { user } = await auth.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n\n        createUserProfileDocument(user, { displayName });\n\n        Alert.success(\"Successfully Signed Up\");\n        history.push(\"/\");\n      } catch (error) {\n        Alert.error(error.message, 3000);\n      }\n    } else {\n      Alert.error(\"Plzz Fill All Fields\", 3000);\n    }\n  };\n\n  return (\n    <Container>\n      <Link to=\"/\" className=\"header__text\">\n        Think Piece Blog\n      </Link>{\" \"}\n      <Content className=\"signUp\">\n        <FlexboxGrid justify=\"center\">\n          <FlexboxGrid.Item\n            componentClass={Col}\n            colspan={18}\n            md={12}\n            className=\"signIn__signUp\"\n          >\n            <Panel header={<h3>Sign Up</h3>} bordered>\n              <Form fluid onSubmit={handleSubmit}>\n                <FormGroup>\n                  <ControlLabel>Username</ControlLabel>\n                  <FormControl\n                    value={displayName}\n                    onChange={(e) => setDisplayName(e)}\n                    name=\"name\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <ControlLabel>Email</ControlLabel>\n                  <FormControl\n                    value={email}\n                    onChange={(e) => setEmail(e)}\n                    name=\"name\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <ControlLabel>Password</ControlLabel>\n                  <FormControl\n                    name=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e)}\n                    type=\"password\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <ButtonToolbar>\n                    <Button appearance=\"primary\" type=\"submit\" block>\n                      Sign Up\n                    </Button>\n                  </ButtonToolbar>\n                </FormGroup>\n              </Form>\n\n              <div style={{ marginTop: \"1rem\" }}>\n                Already have an account? <Link to=\"/login\">Log In</Link>\n              </div>\n            </Panel>\n          </FlexboxGrid.Item>\n        </FlexboxGrid>\n      </Content>\n    </Container>\n  );\n};\n\nexport default SignUp;\n","/home/arsalan/Desktop/bootcamp/projects/blog-app/src/components/SignIn.js",["101"],"import {\n  Container,\n  Content,\n  FlexboxGrid,\n  Panel,\n  Form,\n  FormGroup,\n  ControlLabel,\n  FormControl,\n  ButtonToolbar,\n  Button,\n  Icon,\n  Alert,\n  Col,\n} from \"rsuite\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { signInWithGoogle, auth } from \"../firebase\";\n\nconst SignIn = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory(\"\");\n\n  const handleSubmit = async () => {\n    if (email && password) {\n      try {\n        const { user } = await auth.signInWithEmailAndPassword(email, password);\n\n        Alert.success(\"Successfully Signed In\", 2000);\n        history.push(\"/\");\n      } catch (error) {\n        Alert.error(error.message, 3000);\n      }\n    } else {\n      Alert.error(\"Fields are empty\", 3000);\n    }\n  };\n  return (\n    <Container>\n      <Link to=\"/\" className=\"header__text\">\n        Think Piece Blog\n      </Link>\n\n      <Content className=\"signUp\">\n        <FlexboxGrid justify=\"center\">\n          <FlexboxGrid.Item\n            componentClass={Col}\n            colspan={18}\n            md={12}\n            className=\"signIn__signUp\"\n          >\n            <Panel header={<h3>Sign In</h3>} bordered>\n              <Form fluid onSubmit={handleSubmit}>\n                <FormGroup>\n                  <ControlLabel>Email</ControlLabel>\n                  <FormControl\n                    value={email}\n                    onChange={(e) => setEmail(e)}\n                    name=\"name\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <ControlLabel>Password</ControlLabel>\n                  <FormControl\n                    name=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e)}\n                    type=\"password\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <div className=\"w-100 text-center mt-3\">\n                    <Link to=\"/forgot-password\" className=\"forgot__password\">\n                      Forgot Password?\n                    </Link>\n                  </div>\n                  <ButtonToolbar>\n                    <Button type=\"submit\" appearance=\"primary\" block>\n                      Sign In\n                    </Button>\n                    <Button color=\"red\" onClick={signInWithGoogle} block>\n                      <Icon icon=\"google\" /> Sign In with Google\n                    </Button>\n                  </ButtonToolbar>\n                </FormGroup>\n              </Form>\n\n              <div style={{ marginTop: \"1rem\" }}>\n                Need an account? <Link to=\"/signup\">Sign up</Link>\n              </div>\n            </Panel>\n          </FlexboxGrid.Item>\n        </FlexboxGrid>\n      </Content>\n    </Container>\n  );\n};\n\nexport default SignIn;\n",["102","103"],"/home/arsalan/Desktop/bootcamp/projects/blog-app/src/components/Post.js",[],"/home/arsalan/Desktop/bootcamp/projects/blog-app/src/components/AddPost.js",["104","105"],"import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { firestore } from \"../firebase\";\nimport {\n  Form,\n  Content,\n  FlexboxGrid,\n  FormGroup,\n  FormControl,\n  Button,\n  Alert,\n} from \"rsuite\";\nimport firebase from \"firebase/app\";\nimport { auth } from \"../firebase\";\nimport { useUserProvider } from \"../context/UserProvider\";\n\nconst AddPost = () => {\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const { user } = useUserProvider();\n  const { uid, displayName, email, photoURL } = auth.currentUser || {};\n\n  const handleSubmit = () => {\n    if (title && content) {\n      const newPost = {\n        title,\n        content,\n        user: {\n          uid,\n          displayName,\n          email,\n          photoURL,\n        },\n        favorites: 0,\n        comments: 0,\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      };\n\n      firestore.collection(\"posts\").add(newPost);\n      setTitle(\"\");\n      setContent(\"\");\n      Alert.success(\"Post Created Successfully\");\n    } else {\n      Alert.error(\"Plzzz Fill All Fields\");\n    }\n  };\n  return (\n    <Form fluid onSubmit={handleSubmit} className=\"form\">\n      <FormGroup>\n        <FormControl\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Title\"\n          value={title}\n          onChange={(e) => setTitle(e)}\n        />\n      </FormGroup>\n      <FormGroup>\n        <FormControl\n          type=\"text\"\n          name=\"content\"\n          placeholder=\"Body\"\n          value={content}\n          onChange={(e) => setContent(e)}\n        />\n      </FormGroup>\n\n      <FormGroup>\n        {!user ? (\n          <Link to=\"/login\">Login to Create Posts</Link>\n        ) : (\n          <Button type=\"submit\" appearance=\"primary\" block className=\"create\">\n            Create Post\n          </Button>\n        )}\n      </FormGroup>\n    </Form>\n  );\n};\n\nexport default AddPost;\n","/home/arsalan/Desktop/bootcamp/projects/blog-app/src/components/Posts.js",[],"/home/arsalan/Desktop/bootcamp/projects/blog-app/src/firebase.js",[],["106","107"],"/home/arsalan/Desktop/bootcamp/projects/blog-app/src/utils.js",[],"/home/arsalan/Desktop/bootcamp/projects/blog-app/src/components/CurrentUser.js",[],"/home/arsalan/Desktop/bootcamp/projects/blog-app/src/components/Authentication.js",[],"/home/arsalan/Desktop/bootcamp/projects/blog-app/src/components/Dashboard.js",[],"/home/arsalan/Desktop/bootcamp/projects/blog-app/src/context/PostProvider.js",["108"],"import { createContext, useContext, useState, useEffect } from \"react\";\nimport { firestore } from \"../firebase\";\nimport { collectIdsAndDocs } from \"../utils\";\n\nconst PostContext = createContext();\n\nexport const PostsProvider = ({ children }) => {\n  const [posts, setPosts] = useState([]);\n  let unsubscribeFromFirestore = null;\n\n  useEffect(() => {\n    unsubscribeFromFirestore = firestore\n      .collection(\"posts\")\n      .orderBy(\"createdAt\", \"desc\")\n      .onSnapshot((snapshot) => {\n        const newPosts = snapshot.docs.map(collectIdsAndDocs);\n        setPosts(newPosts);\n      });\n\n    return () => unsubscribeFromFirestore();\n  }, []);\n\n  return (\n    <PostContext.Provider value={{ posts }}>{children}</PostContext.Provider>\n  );\n};\n\nexport const usePostProvider = () => useContext(PostContext);\n","/home/arsalan/Desktop/bootcamp/projects/blog-app/src/context/UserProvider.js",["109"],"import { createContext, useContext, useState, useEffect } from \"react\";\n\nimport { auth, createUserProfileDocument } from \"../firebase\";\n\nconst UserContext = createContext();\n\nexport const UserProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  let unsubscribeFromAuth = null;\n\n  useEffect(() => {\n    unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n        userRef.onSnapshot((snapshot) => {\n          setUser({ uid: snapshot?.uid, ...snapshot.data() });\n        });\n      } else {\n        setUser(null);\n      }\n    });\n\n    return () => unsubscribeFromAuth();\n  }, []);\n\n  const resetPassword = (email) => {\n    return auth.sendPasswordResetEmail(email);\n  };\n\n  return (\n    <UserContext.Provider value={{ user, resetPassword }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nexport const useUserProvider = () => useContext(UserContext);\n","/home/arsalan/Desktop/bootcamp/projects/blog-app/src/components/PrivateRoute.js",[],"/home/arsalan/Desktop/bootcamp/projects/blog-app/src/components/UserProfile.js",[],"/home/arsalan/Desktop/bootcamp/projects/blog-app/src/components/PrivateRouteUserProfile.js",[],"/home/arsalan/Desktop/bootcamp/projects/blog-app/src/components/Comments.js",[],"/home/arsalan/Desktop/bootcamp/projects/blog-app/src/components/Comment.js",[],"/home/arsalan/Desktop/bootcamp/projects/blog-app/src/components/PostPage.js",["110","111"],"/home/arsalan/Desktop/bootcamp/projects/blog-app/src/components/AddComment.js",[],"/home/arsalan/Desktop/bootcamp/projects/blog-app/src/components/ForgotPassword.js",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":13,"column":3,"nodeType":"118","messageId":"119","endLine":13,"endColumn":7},{"ruleId":"116","severity":1,"message":"120","line":28,"column":17,"nodeType":"118","messageId":"119","endLine":28,"endColumn":21},{"ruleId":"112","replacedBy":"121"},{"ruleId":"114","replacedBy":"122"},{"ruleId":"116","severity":1,"message":"123","line":6,"column":3,"nodeType":"118","messageId":"119","endLine":6,"endColumn":10},{"ruleId":"116","severity":1,"message":"124","line":7,"column":3,"nodeType":"118","messageId":"119","endLine":7,"endColumn":14},{"ruleId":"112","replacedBy":"125"},{"ruleId":"114","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":12,"column":32,"nodeType":"129","endLine":18,"endColumn":9},{"ruleId":"127","severity":1,"message":"130","line":12,"column":27,"nodeType":"129","endLine":21,"endColumn":7},{"ruleId":"127","severity":1,"message":"131","line":38,"column":27,"nodeType":"129","endLine":41,"endColumn":7},{"ruleId":"127","severity":1,"message":"132","line":43,"column":30,"nodeType":"129","endLine":47,"endColumn":7},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'Icon' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.",["133"],["134"],"'Content' is defined but never used.","'FlexboxGrid' is defined but never used.",["133"],["134"],"react-hooks/exhaustive-deps","Assignments to the 'unsubscribeFromFirestore' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'unsubscribeFromAuth' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'unsubscribeFromPost' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'unsubscribeFromComment' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","no-global-assign","no-unsafe-negation"]